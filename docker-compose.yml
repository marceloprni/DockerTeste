version: "3.9"

services:
    db:
      image: postgres:16-alpine
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      volumes:
        - pgdata:/var/lib/postgresql/data
      networks:
        - app-net
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
        interval: 5s
        timeout: 5s
        retries: 10
      restart: unless-stopped

    app:
      build:
        context: .
        dockerfile: Dockerfile
      environment:
        NODE_ENV: production
        APP_PORT: ${APP_PORT:-3000}
        APP_SECRET: ${APP_SECRET}
        # Você pode usar DATABASE_URL ou as variáveis separadas (o código suporta ambos)
        DATABASE_URL: ${DATABASE_URL}
        POSTGRES_HOST: db
        POSTGRES_PORT: 5432
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      depends_on:
        db:
          condition: service_healthy
      ports:
        - "${APP_PORT:-3000}:3000"
      networks:
        - app-net
      restart: unless-stopped

volumes:
    pgdata:

networks:
  app-net:
    driver: bridge